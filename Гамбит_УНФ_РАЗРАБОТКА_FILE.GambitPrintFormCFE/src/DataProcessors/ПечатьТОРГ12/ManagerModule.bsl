
&ИзменениеИКонтроль("СформироватьПФ")
Функция ДоработкиПечатныхФорм_СформироватьПФ(ОписаниеПечатнойФормы, ДанныеОбъектовПечати, ОбъектыПечати, ВключаяРаботыУслуги)
	Перем Ошибки, ПервыйДокумент, НомерСтрокиНачало;

	Макет = УправлениеПечатью.МакетПечатнойФормы(ОписаниеПечатнойФормы.ПолныйПутьКМакету);
	ТабличныйДокумент = ОписаниеПечатнойФормы.ТабличныйДокумент;
	ДанныеПечати = Новый Структура;
	ЕстьТЧЗапасы = (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаЗапасы") <> Неопределено);
	ЕстьТЧПродукция = (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаПродукция") <> Неопределено);
	ЕстьТЧОтходы = (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаОтходы") <> Неопределено);
	ЕстьТЧРаботыУслуги = (ДанныеОбъектовПечати.Колонки.Найти("ТаблицаРаботыУслуги") <> Неопределено);
	НациональнаяВалюта = Константы.НациональнаяВалюта.Получить();

	ОбластиМакета = Новый Структура;
	ОбластиМакета.Вставить("ОбластьМакетаШапка", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Шапка", "",
	Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаЗаголовокТаблицы", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
	"ЗаголовокТаб", НСтр("ru ='Заголовок таблицы'"), Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаСтрока", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Строка", "",
	Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаИтогоПоСтранице", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
	"ИтогоПоСтранице", НСтр("ru ='Итоги по странице'"), Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаВсего", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет, "Всего", "",
	Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаПодвалБезФаксимиле", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
	"ПодвалБезФаксимиле", "", Ошибки));
	ОбластиМакета.Вставить("ОбластьМакетаПодвалСФаксимиле", ПечатьДокументовУНФ.ПолучитьОбластьБезопасно(Макет,
	"ПодвалСФаксимиле", "", Ошибки));

	Для Каждого ДанныеОбъекта Из ДанныеОбъектовПечати Цикл

		ПечатьДокументовУНФ.ПередНачаломФормированияДокумента(ТабличныйДокумент, ПервыйДокумент, НомерСтрокиНачало,
		ДанныеПечати);

		Если ОбластиМакета.ОбластьМакетаШапка <> Неопределено Тогда

			НомерДокумента = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(ДанныеОбъекта.ДатаДокумента,
			ДанныеОбъекта.Номер, ДанныеОбъекта.Префикс);

			ДанныеПечати.Вставить("НомерДокумента", НомерДокумента);
			ДанныеПечати.Вставить("ДатаДокумента", ДанныеОбъекта.ДатаДокумента);

			БанковскийСчетГрузоотправителя = ?(ДанныеОбъекта.Организация = ДанныеОбъекта.Грузоотправитель,
			ДанныеОбъекта.БанковскийСчет, Неопределено);

			СведенияОГрузоотправителе = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(
			ДанныеОбъекта.Грузоотправитель, ДанныеОбъекта.ДатаДокумента, , БанковскийСчетГрузоотправителя);
			СведенияОГрузополучателе = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(
			ДанныеОбъекта.Грузополучатель, ДанныеОбъекта.ДатаДокумента, , );
			СведенияОПоставщике = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Организация,
			ДанныеОбъекта.ДатаДокумента, , ДанныеОбъекта.БанковскийСчет);
			СведенияОПокупателе = УправлениеНебольшойФирмойСервер.СведенияОЮрФизЛице(ДанныеОбъекта.Контрагент,
			ДанныеОбъекта.ДатаДокумента, , ДанныеОбъекта.БанковскийСчетКонтрагента);

			ДанныеПечати.Вставить("ПредставлениеПоставщика", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(
			СведенияОПоставщике,
			"ПолноеНаименование,ИНН,Свидетельство,ЮридическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет"));
			ДанныеПечати.Вставить("ПредставлениеПлательщика", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(
			СведенияОПокупателе,
			"ПолноеНаименование,ИНН,Свидетельство,ЮридическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет"));
			ДанныеПечати.Вставить("ПредставлениеГрузоотправителя", УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(
			СведенияОГрузоотправителе,
			"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет"));

			Если ПустаяСтрока(ДанныеОбъекта.АдресДоставки) Тогда

				ДанныеПечати.Вставить("ПредставлениеГрузополучателя",
				УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе,
				"ПолноеНаименование,ИНН,ФактическийАдрес,Телефоны,Факс,НомерСчета,Банк,БИК,КоррСчет"));

			Иначе

				ПерваяЧастьКИ = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе,
				"ПолноеНаименование,ИНН");
				ВтораяЧастьКИ = УправлениеНебольшойФирмойСервер.ОписаниеОрганизации(СведенияОГрузополучателе,
				"Телефоны,НомерСчета,Банк,БИК,КоррСчет");

				ДанныеПечати.Вставить("ПредставлениеГрузополучателя", СтрШаблон("%1, %2, %3", ПерваяЧастьКИ,
				ДанныеОбъекта.АдресДоставки, ВтораяЧастьКИ));

			КонецЕсли;

			ДанныеПечати.Вставить("ГрузоотправительПоОКПО", СведенияОГрузоотправителе.КодПоОКПО);
			ДанныеПечати.Вставить("ПредставлениеПодразделения", ДанныеОбъекта.ПредставлениеСкладаСписания);
			ДанныеПечати.Вставить("ВидДеятельностиПоОКДП", Неопределено);
			ДанныеПечати.Вставить("ГрузополучательПоОКПО", СведенияОГрузополучателе.КодПоОКПО);
			ДанныеПечати.Вставить("ПоставщикПоОКПО", СведенияОПоставщике.КодПоОКПО);
			ДанныеПечати.Вставить("ПлательщикПоОКПО", СведенияОПокупателе.КодПоОКПО);
			ДанныеПечати.Вставить("ПредставлениеОснования", ДанныеОбъекта.ПредставлениеОснования);

			ОснованиеНомер = Строка(ДанныеОбъекта.ОснованиеНомер);
			Если Не ПустаяСтрока(ОснованиеНомер) Тогда

				ОснованиеНомер = ПечатьДокументовУНФ.ПолучитьНомерНаПечатьСУчетомДатыДокумента(
				ДанныеОбъекта.ДатаДокумента, ОснованиеНомер, ДанныеОбъекта.Префикс);

			КонецЕсли;

#Удаление
			ДанныеПечати.Вставить("ОснованиеНомер", ОснованиеНомер);
			ДанныеПечати.Вставить("ОснованиеДата", ДанныеОбъекта.ОснованиеДата);
#КонецУдаления
#Вставка
// Здесь можно описать новое поведение.
			ДанныеПечати.Вставить("ОснованиеНомер", ОснованиеНомер);
			ДанныеПечати.Вставить("ОснованиеДата", ДанныеОбъекта.ОснованиеДата);
// Восстановление номера основания как в счете 
// Номер только числа : 
Если Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(ДанныеОбъекта.ОснованиеПечатиСсылка)) И
						ДанныеОбъекта.ОснованиеПечатиСсылка <>Неопределено Тогда 
				ПоискНомер  = Формат(Число(прав(ОснованиеНомер,6)),"ЧГ=0");
				ДанныеПечати.ПредставлениеОснования = СтрЗаменить(ДанныеПечати.ПредставлениеОснования,ПоискНомер,ОснованиеНомер);
            КонецЕсли ;
#КонецВставки
			ДанныеПечати.Вставить("ТранспортнаяНакладнаяНомер", ДанныеОбъекта.ТранспортнаяНакладнаяНомер);
			ДанныеПечати.Вставить("ТранспортнаяНакладнаяДата", ДанныеОбъекта.ТранспортнаяНакладнаяДата);

			ОбластиМакета.ОбластьМакетаШапка.Параметры.Заполнить(ДанныеПечати);
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(ТабличныйДокумент, Макет,
			ОбластиМакета.ОбластьМакетаШапка, ДанныеОбъекта.Ссылка);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаШапка);

		КонецЕсли;

		Итоги = Новый Структура;
		Итоги.Вставить("ИтогоМестНаСтранице", 0);
		Итоги.Вставить("ИтогоМассаБруттоПоСтранице", 0);
		Итоги.Вставить("ИтогоКоличествоНаСтранице", 0);
		Итоги.Вставить("ИтогоСуммаНаСтранице", 0);
		Итоги.Вставить("ИтогоНДСНаСтранице", 0);
		Итоги.Вставить("ИтогоСуммаСНДСНаСтранице", 0);
		Итоги.Вставить("НомерСтроки", 0);
		Итоги.Вставить("КоличествоСтрок", 0);
		Итоги.Вставить("ИтогоМест", 0);
		Итоги.Вставить("ИтогоМассаБрутто", 0);
		Итоги.Вставить("ИтогоКоличество", 0);
		Итоги.Вставить("ИтогоСумма", 0);
		Итоги.Вставить("ИтогоНДС", 0);
		Итоги.Вставить("ИтогоСуммаСНДС", 0);
		Итоги.Вставить("НомерСтраницы", 1);
		Итоги.Вставить("ИспользоватьФаксимиле", ДанныеОбъекта.ИспользоватьФаксимиле);

		Если ОбластиМакета.ОбластьМакетаЗаголовокТаблицы <> Неопределено Тогда

			ДанныеПечати.Вставить("НомерСтраницы", "Страница " + Итоги.НомерСтраницы);

			ОбластиМакета.ОбластьМакетаЗаголовокТаблицы.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаЗаголовокТаблицы);

		КонецЕсли;

		Итоги.КоличествоСтрок = КоличествоСтрокКВыводуНаПечать(ДанныеОбъекта, ВключаяРаботыУслуги,
		ЕстьТЧЗапасы, ЕстьТЧРаботыУслуги, ЕстьТЧПродукция, ЕстьТЧОтходы);

		Если ОбластиМакета.ОбластьМакетаСтрока <> Неопределено Тогда

			ПараметрыНоменклатуры = Новый Структура;

			Если ЕстьТЧЗапасы Тогда

				// Наборы
				Итоги.Вставить("ЕстьНаборы", ДанныеОбъекта.ТаблицаЗапасы.Колонки.Найти(
				"НоменклатураНабора") <> Неопределено);

				Для Каждого СтрокаЗапаса Из ДанныеОбъекта.ТаблицаЗапасы Цикл

					Если Не ВключаяРаботыУслуги
						И СтрокаЗапаса.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас
						И СтрокаЗапаса.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.ПодарочныйСертификат Тогда

						Продолжить;

					КонецЕсли;

					Если СтрокаЗапаса.Количество = 0 Тогда

						Продолжить;

					КонецЕсли;

					Если Итоги.НомерСтроки <> 0 И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент,
						ОбластиМакета, Итоги) = Ложь Тогда

						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, Итоги);

					КонецЕсли;

					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаЗапаса, ДанныеПечати, ПараметрыНоменклатуры,
					Итоги, ДанныеОбъекта.СуммаВключаетНДС);
					ОбластиМакета.ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаСтрока);

					// Наборы
					Если Итоги.ЕстьНаборы Тогда
						НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластиМакета.ОбластьМакетаСтрока,
						СтрокаЗапаса);
					КонецЕсли;
					// Конец Наборы

				КонецЦикла;

			КонецЕсли;

			Если ВключаяРаботыУслуги И ЕстьТЧРаботыУслуги Тогда

				// Наборы
				Итоги.Вставить("ЕстьНаборы", ДанныеОбъекта.ТаблицаРаботыУслуги.Колонки.Найти(
				"НоменклатураНабора") <> Неопределено);

				Для Каждого СтрокаРаботУслуг Из ДанныеОбъекта.ТаблицаРаботыУслуги Цикл

					Если Итоги.НомерСтроки <> 0 И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент,
						ОбластиМакета, Итоги) = Ложь Тогда

						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, Итоги);

					КонецЕсли;

					Если СтрокаРаботУслуг.Количество = 0 Тогда

						Продолжить;

					КонецЕсли;

					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаРаботУслуг, ДанныеПечати, ПараметрыНоменклатуры,
					Итоги, ДанныеОбъекта.СуммаВключаетНДС);
					ОбластиМакета.ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаСтрока);

					// Наборы
					Если Итоги.ЕстьНаборы Тогда
						НаборыСервер.УчестьОформлениеСтрокиНабора(ТабличныйДокумент, ОбластиМакета.ОбластьМакетаСтрока,
						СтрокаРаботУслуг);
					КонецЕсли;
					// Конец Наборы

				КонецЦикла;

			КонецЕсли;

			// Наборы
			Итоги.Вставить("ЕстьНаборы", Ложь);

			Если ЕстьТЧПродукция Тогда

				Для Каждого СтрокаПродукция Из ДанныеОбъекта.ТаблицаПродукция Цикл

					Если Не ВключаяРаботыУслуги
						И СтрокаПродукция.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда

						Продолжить;

					КонецЕсли;

					Если СтрокаПродукция.Количество = 0 Тогда

						Продолжить;

					КонецЕсли;

					Если Итоги.НомерСтроки <> 0 И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент,
						ОбластиМакета, Итоги) = Ложь Тогда

						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, Итоги);

					КонецЕсли;

					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаПродукция, ДанныеПечати, ПараметрыНоменклатуры,
					Итоги, ДанныеОбъекта.СуммаВключаетНДС);

					ОбластиМакета.ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаСтрока);

				КонецЦикла;

			КонецЕсли;

			Если ЕстьТЧОтходы Тогда

				Для Каждого СтрокаОтходы Из ДанныеОбъекта.ТаблицаОтходы Цикл

					Если Не ВключаяРаботыУслуги И СтрокаОтходы.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Запас Тогда

						Продолжить;

					КонецЕсли;

					Если СтрокаОтходы.Количество = 0 Тогда

						Продолжить;

					КонецЕсли;

					Если Итоги.НомерСтроки <> 0 И СтрокаКорректноРазмещаетсяНаСтранице(ТабличныйДокумент,
						ОбластиМакета, Итоги) = Ложь Тогда

						ДобавитьНовуюСтраницуДокумента(ТабличныйДокумент, ОбластиМакета, Итоги);

					КонецЕсли;

					ЗаполнитьДанныеПечатиПоСтрокеТабличнойЧасти(СтрокаОтходы, ДанныеПечати, ПараметрыНоменклатуры,
					Итоги, ДанныеОбъекта.СуммаВключаетНДС);

					ОбластиМакета.ОбластьМакетаСтрока.Параметры.Заполнить(ДанныеПечати);
					ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаСтрока);

				КонецЦикла;

			КонецЕсли;

		КонецЕсли;

		Если ОбластиМакета.ОбластьМакетаИтогоПоСтранице <> Неопределено Тогда

			ОбластиМакета.ОбластьМакетаИтогоПоСтранице.Параметры.Заполнить(Итоги);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаИтогоПоСтранице);

		КонецЕсли;

		Если ОбластиМакета.ОбластьМакетаВсего <> Неопределено Тогда

			ОбластиМакета.ОбластьМакетаВсего.Параметры.Заполнить(Итоги);
			ТабличныйДокумент.Вывести(ОбластиМакета.ОбластьМакетаВсего);

		КонецЕсли;

		ОбластьМакета = ?(ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да,
		ОбластиМакета.ОбластьМакетаПодвалСФаксимиле, ОбластиМакета.ОбластьМакетаПодвалБезФаксимиле);
		Если ОбластьМакета <> Неопределено Тогда

			ПоследняяЦифра = Прав(Строка(Итоги.НомерСтраницы), 1);
			Суффикс = ?(ПоследняяЦифра = "1", НСтр("ru =' листе'"), НСтр("ru =' листах'"));
			ДанныеПечати.Вставить("КоличествоЛистовВПриложении", Строка(Итоги.НомерСтраницы) + Суффикс);

			ДанныеПечати.Вставить("ДолжностьРуководителя", ДанныеОбъекта.ДолжностьРуководителя);
			ДанныеПечати.Вставить("РасшифровкаПодписиРуководителя", ДанныеОбъекта.РасшифровкаПодписиРуководителя);
			ДанныеПечати.Вставить("РасшифровкаПодписиГлавногоБухгалтера",
			ДанныеОбъекта.РасшифровкаПодписиГлавногоБухгалтера);
			ДанныеПечати.Вставить("ДолжностьКладовщика", ДанныеОбъекта.ДолжностьКладовщика);
			ДанныеПечати.Вставить("РасшифровкаПодписиКладовщика", ДанныеОбъекта.РасшифровкаПодписиКладовщика);
			ДанныеПечати.Вставить("КоличествоПорядковыхНомеровЗаписейПрописью", ЧислоПрописью(
			Итоги.КоличествоСтрок, , ",,,,,,,,0"));
			ДанныеПечати.Вставить("ВсегоМестПрописью", ?(Итоги.ИтогоМест = 0, "", ЧислоПрописью(
			Итоги.ИтогоМест, , ",,,С,,,,,0")));
			ДанныеПечати.Вставить("МассаГрузаПрописью", МассаГрузаПрописью(Итоги.ИтогоМассаБрутто,
			ДанныеОбъекта));
			ДанныеПечати.Вставить("СуммаПрописью", РаботаСКурсамиВалют.СформироватьСуммуПрописью(
			Итоги.ИтогоСуммаСНДС, НациональнаяВалюта));
			ДанныеПечати.Вставить("ДоверенностьНомер", ДанныеОбъекта.ДоверенностьНомер);
			ДанныеПечати.Вставить("ДоверенностьДата", ДанныеОбъекта.ДоверенностьДата);
			ДанныеПечати.Вставить("ДоверенностьВыдана", ДанныеОбъекта.ДоверенностьВыдана);
			ДанныеПечати.Вставить("ДоверенностьЧерезКого", ДанныеОбъекта.ДоверенностьЛицо);
			ДанныеПечати.Вставить("ДоверенностьЧерезКого", ДанныеОбъекта.ДоверенностьЛицо);
			ДанныеПечати.Вставить("РасшифровкаПодписиКонтрагента", ДанныеОбъекта.РасшифровкаПодписиКонтрагента);

			ПолнаяДатаДокумента = Формат(ДанныеОбъекта.ДатаДокумента, "ДФ=""дд ММММ гггг """"года""""""");
			ДлинаСтроки = СтрДлина(ПолнаяДатаДокумента);
			ПервыйРазделитель = СтрНайти(ПолнаяДатаДокумента, " ");
			ВторойРазделитель = СтрНайти(Прав(ПолнаяДатаДокумента, ДлинаСтроки - ПервыйРазделитель), " ")
			+ ПервыйРазделитель;

			ДанныеПечати.Вставить("ДатаДокументаДень", """" + Лев(ПолнаяДатаДокумента, ПервыйРазделитель - 1) + """");
			ДанныеПечати.Вставить("ДатаДокументаМесяц", Сред(ПолнаяДатаДокумента, ПервыйРазделитель + 1,
			ВторойРазделитель - ПервыйРазделитель - 1));
			ДанныеПечати.Вставить("ДатаДокументаГод", Прав(ПолнаяДатаДокумента, ДлинаСтроки - ВторойРазделитель));

			Если ДанныеОбъекта.ИспользоватьФаксимиле = Перечисления.ДаНет.Да Тогда

				ПодписиИФаксимиле = Новый Соответствие; // Ключ - имя каринки в области, Значение - имя реквизита
				ПодписиИФаксимиле.Вставить("ПодписьРуководителя", "ФаксимилеРуководителя");
				ПодписиИФаксимиле.Вставить("ПодписьГлавногоБухгалтера", "ФаксимилеГлавногоБухгалтера");
				ПодписиИФаксимиле.Вставить("ПодписьКладовщика", "ФаксимилеКладовщика");
				ПодписиИФаксимиле.Вставить("ПечатьОрганизации", "ФаксимилеПечати");

				ПодписьДокументовУНФ.ЗаполнитьФаксимилеВОбластиМакета(ОбластьМакета, ДанныеОбъекта, ПодписиИФаксимиле,
				Ошибки);

			КонецЕсли;

			ОбластьМакета.Параметры.Заполнить(ДанныеПечати);
			ТабличныйДокумент.Вывести(ОбластьМакета);

		КонецЕсли;

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати,
		ДанныеОбъекта.Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции
